@mixin button($type, $bg:$button_bg_color, $fg:$fg_color, $r_shadow:true) {

  outline-color: $fg_color;
  icon-shadow: none;
  text-shadow: none;

  @if $type==normal {
    color: $fg;
    border-color: $button_borders_color;
    background: button_bg(normal, $bg, $r_shadow);
  }
  @else if $type==default {
    color: $fg;
    border-color: $button_borders_color;
    background: button_bg(default, $bg, $r_shadow);
  }
  @else if $type==hover {
    color: $fg;
    border-color: $button_borders_color;
    background: button_bg(hover, $bg, $r_shadow);
  }
  @else if $type==active {
    color: $fg;
    border-color: $button_borders_color;
    background: button_bg(active, $bg, $r_shadow);
  }
  @else if $type==insensitive {
    color: $button_insensitive_fg_color;
    border-color: $button_insensitive_borders_color;
    background-image: none;
    background-color: $button_insensitive_bg_color;
  }
  @else if $type==osd {
    color: $osd_fg_color;
    border-color: $button_borders_color;
    background-color: if($bg!=$bg_color, transparentize($bg, 0.5), $osd_bg_color);
    background-image: none;
    background-clip: padding-box;
  }
  @else if $type==osd-hover {
    border-color: $button_borders_color;
    background-color: if($bg!=$bg_color, transparentize(osd_hover_bg_color($bg), 0.3), lighten($osd_bg_color, 12%));
    background-image: none;
    background-clip: padding-box;
  }
  @else if $type==osd-active {
    border-color: $button_borders_color;
    background-color: if($bg!=$bg_color, $bg, $osd_borders_color);;
    background-image: none;
    background-clip: padding-box;
  }
  @else if $type==osd-insensitive {
    color: $osd_insensitive_fg_color;
    border-color: $insensitive_borders_color;
    background-color: $osd_insensitive_bg_color;
    background-image: none;
    background-clip: padding-box;
  }
  @else if $type==undecorated {
    border-color: transparent;
    background-color: transparent;
    background-image: none;
  }
}

@mixin button_edge($type, $top:true, $right:true, $bottom:true, $left:true, $edge:$borders_edge) {
  @if $type==normal {
    box-shadow: button_shadow(normal, $edge, $top, $right, $bottom, $left);
  }
  @else if $type==default {
    box-shadow: button_shadow(default, $edge, $top, $right, $bottom, $left);
  }
  @else if $type==hover {
    box-shadow: button_shadow(hover, $edge, $top, $right, $bottom, $left);
  }
  @else if $type==active {
    box-shadow: button_shadow(active, $edge, $top, $right, $bottom, $left);
  }
  @else if $type==insensitive {
    box-shadow: button_shadow(insensitive, $edge, $top, $right, $bottom, $left);
  }
  @else if $type==osd {
    box-shadow: inset 0 1px transparentize(white, 0.9);
  }
  @else if $type==osd-hover {
    box-shadow: inset 0 1px transparentize(white, 0.9);
  }
  @else if $type==osd-active {
    box-shadow: none;
  }
  @else if $type==osd-insensitive {
    box-shadow: none;
  }
  @else if $type==undecorated {
    @if $edge==none {
	  box-shadow: inset 0 1px transparentize(white, 1);	
	} @else {
      box-shadow: inset 0 1px transparentize(white, 1),
                  0px 1px transparentize($edge, 1);
    }
  }
}

@mixin linked_button_edge($top, $right, $bottom, $left) {
  @include button_edge(normal, $top, $right, $bottom, $left);

  &.flat {
    @include button_edge(undecorated, $top, $right, $bottom, $left);
        
    &:hover { @include button_edge(osd-hover, $top, $right, $bottom, $left); }

    &:active { @include button_edge(active, $top, $right, $bottom, $left); }
    
    &:insensitive { @include button_edge(insensitive, $top, $right, $bottom, $left); }
  }

  &:hover { @include button_edge(hover, $top, $right, $bottom, $left); }

  &:active,
  &:checked { @include button_edge(active, $top, $right, $bottom, $left); }

  &.flat:insensitive { @include button_edge(undecorated, $top, $right, $bottom, $left); }

  &.default {
    @include button_edge(default, $top, $right, $bottom, $left);

    &:hover { @include button_edge(hover, $top, $right, $bottom, $left); }

    &:active { @include button_edge(active, $top, $right, $bottom, $left); }
  }

  &:insensitive { @include button_edge(insensitive, $top, $right, $bottom, $left); }

  &.osd {
    @include button_edge(osd, $top, $right, $bottom, $left);

    &:hover { @include button_edge(osd-hover, $top, $right, $bottom, $left); }

    &:active,
    &:checked { @include button_edge(osd-active, $top, $right, $bottom, $left); }

    &:insensitive { @include button_edge(osd-insensitive, $top, $right, $bottom, $left); }

    &.flat {
      @include button_edge(undecorated, $top, $right, $bottom, $left);

      &:hover { @include button_edge(osd-hover, $top, $right, $bottom, $left); }

      &:active,
      &:checked { @include button_edge(osd-active, $top, $right, $bottom, $left); }

      &:insensitive { @include button_edge(osd-insensitive, $top, $right, $bottom, $left); }
    }
  }
}

@mixin entry_button($t, $dir:'', $bor:'') {

  $_border: 3px;
  $_slice: 3 3 3 3;

  @if $bor=='' {
    @if $dir==rtl {
      $_slice: 4 3 4 4;
      $_border: 4px 3px 4px 4px;
	} @else if $dir==ltr {
      $_slice: 4 4 4 3;
      $_border: 4px 4px 4px 3px;
	} @else {
      $_slice: 4 3 4 3;
      $_border: 4px 3px 4px 3px;
	}
  }

  $d: if($dir=='','',"-#{$dir}");
  $b: if($bor=='','',"borderless-");

  border-width: $_border;
  border-style: solid;
  border-color: transparent;
  
  box-shadow: none;

  @if $t==normal {
    border-image: url("Combo/#{$b}combo-button-border#{$d}.png");
    background-image: url("Combo/combo-button-bg.png");
  }
  @if $t==hover {
    border-image: url("Combo/#{$b}combo-button-border#{$d}-hover.png");
    background-image: url("Combo/combo-button-bg-hover.png");
  }
  @if $t==active {
    border-image: url("Combo/#{$b}combo-button-border#{$d}-active.png");
    background-image: url("Combo/combo-button-bg-active.png");
  }
  @if $t==insensitive {
    border-image: url("Combo/#{$b}combo-button-border#{$d}-insensitive.png");
    background-image: url("Combo/combo-button-bg-insensitive.png");
  }

  border-image-slice: $_slice;
  background-size: 100% 100%;
  background-repeat: no-repeat;
}

@mixin progressbar_trough ($d:horz) {
  border-style: solid;
  border-color: transparent;
  border-image: url('Progressbar/progressbar-trough-#{$d}.png');
  background-color: $base_color;
  background-clip: padding-box;

  @if $d==horz {
    border-width: 3px 4px;
    border-image-slice: 3 4 3 4;
  } @else if $d==vert {
    border-width: 4px 3px;
    border-image-slice: 4 3 4 3;
  }
}

@mixin toolbar_bg {
  border-style: solid;
  border-width: 1px 0px 1px 0px;
  border-top-color: $toolbar_top_edge;
  border-bottom-color: $toolbar_bottom_edge;
  background: $bg_color;
}

@mixin frame_inset {
  border: 2px solid transparent;
  border-image: url("Frames/shadow-inset.png");
  border-image-slice: 2 2 2 2;
  border-image-repeat: stretch;
}

@function _text_shadow_color ($tc:$fg_color, $bg:$bg_color) {
  $_lbg: lightness($bg)/100%;
  @if lightness($tc)<50% { @return transparentize(white,1-$_lbg/($_lbg*1.3)); }
  @else { @return transparentize(black,$_lbg*0.8); }
}

@function _widget_edge($c:$borders_edge) {
  @return 0px 1px $c;
}

//@mixin _button_text_shadow ($tc:$fg_color, $bg:$bg_color) {
//  $_shadow: _text_shadow_color($tc, $bg);

//  @if lightness($tc)<50% {
//    text-shadow: 0px 1px $_shadow;
//  }
//  @else {
//    text-shadow: 0px -1px $_shadow;
//  }
//}
