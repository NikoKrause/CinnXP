@function gtkalpha($c,$a) {
  @return unquote("alpha(#{$c},#{$a})");
}

* {
  padding: 0;
  -GtkToolButton-icon-spacing: 4;
  -GtkTextView-error-underline-color: $error_color;

  // The size for scrollbars. The slider is 2px smaller, but we keep it
  // up so that the whole area is sensitive to button presses for the
  // slider. The stepper button is larger in both directions, the slider
  // only in the width

  -GtkScrolledWindow-scrollbar-spacing: 0;

  -GtkToolItemGroup-expander-size: 12;

  -GtkWidget-text-handle-width: 20;
  -GtkWidget-text-handle-height: 24;

  -GtkDialog-button-spacing: 4;
  -GtkDialog-action-area-border: 0;

  // We use the outline properties to signal the focus properties
  // to the adwaita engine: using real CSS properties is faster,
  // and we don't use any outlines for now.

  outline-color: gtkalpha($fg_color, 0.5);
  outline-style: dashed;
  outline-offset: -3px;
  outline-width: 1px;
  -gtk-outline-radius: 0;

  -gtk-secondary-caret-color: $selected_bg_color
}


/***************
 * Base States *
 ***************/
.background {
  color: $fg_color;
  background-color: darken($bg_color, 1.5%);
}

/*
   These wildcard seems unavoidable, need to investigate.
   Wildcards are bad and troublesome, use them with care,
   or better, just don't.
   Everytime a wildcard is used a kitten dies, painfully.
*/

*:disabled { -gtk-icon-effect: dim; }

//this ugly creature is needed to make the cinnamon curser locator look pretty (not black)
*:selected { background-color: $selected_bg_color; }

.gtkstyle-fallback {
  color: $fg_color;
  background-color: $bg_color;

  &:hover {
    color: $fg_color;
    background-color: lighten($bg_color, 10%);
  }

  &:active {
    color: $fg_color;
    background-color: darken($bg_color, 10%);
  }

  &:disabled {
    color: $insensitive_fg_color;
    background-color: $insensitive_bg_color;
  }

  &:selected {
    color: $selected_fg_color;
    background-color: $selected_bg_color;
  }
}

.view,
%view {
  color: $text_color;
  background-color: $base_color;

  &:selected {
    &:focus, & {
      @extend %selected_items;

      border-radius: 0px;
    }
  }
}

.view,
textview {
  text {
    @extend %view;

    selection { &:focus, & { @extend %selected_items; }}
  }
}

textview border { background-color: mix($bg_color, $base_color, 50%); }

iconview { @extend .view; }

.rubberband,
rubberband {
  border: 1px solid $selected_bg_color;
  background-color: transparentize($selected_bg_color,0.8);
}

flowbox {
  rubberband { @extend rubberband; }

  flowboxchild {
    padding: 3px;
    border-radius: 3px;

    &:selected {
      @extend %selected_items;

      outline-offset: -2px;
    }
  }
}

label {
  caret-color: currentColor; // this shouldn't be needed.

  &.separator {
    @extend .dim-label;

    color: $fg_color;
  }

  row:selected &,
  &:selected { @extend %nobg_selected_items; }

  selection {
    background-color: $selected_bg_color;
    color: $selected_fg_color;
  }

  &:disabled {
    color: $insensitive_fg_color;
    text-shadow: 1px 1px white;

    //selection { @extend %selected_items:disabled; }
  }
}

.dim-label {
  opacity: 0.55;
  text-shadow: none;
}

assistant {
  .sidebar {
    background-color: $base_color;
    border-top: 1px solid $borders_color;

  }

  &.csd .sidebar { border-top-style: none; }

  .sidebar label { padding: 6px 12px; }

  .sidebar label.highlight { background-color: mix($bg_color, $fg_color, 80%); }
}

%osd,
.osd {
  color: $osd_fg_color;
  border: 1px solid $osd_borders_color;
  background-color: $osd_bg_color;
  background-clip: padding-box;
  box-shadow: none;
  //text-shadow: 0px 1px black;
  //-gtk-icon-shadow: 0 1px black;
}


/*********************
 * Spinner Animation *
 *********************/
@keyframes spin {
  to { -gtk-icon-transform: rotate(1turn); }
}

spinner {
  background: none;
  opacity: 0; // non spinning spinner makes no sense
  -gtk-icon-source: -gtk-icontheme('process-working-symbolic');

  &:checked {
    opacity: 1;
    animation: spin 1s linear infinite;

    &:disabled { opacity: 0.5; }
  }
}


/****************
 * Text Entries *
 ****************/

%entry,
entry {
  %entry_basic, & {
    min-height: 18px;
    padding: 5px 8px 6px;
    border: 1px solid $borders_color;
    border-radius: 0px;

    background-color: $base_color;

    image { // icons inside the entry
      &.left { margin-right: 6px; }
      &.right { margin-left: 6px; }
    }

    &.flat {
      &:focus, & {
        min-height: 0;
        padding: 2px;
        border: none;
        border-radius: 0;
      }
    }

    &:disabled {
      background-color: $bg_color;
      box-shadow: inset 0px 0px 0px 2px $insensitive_entry_edge_color;
      border-color: $insensitive_entry_border_color;
      color: $insensitive_fg_color;
    }

    selection { @extend %selected_items; }

    // entry error and warning style
    @each $e_type, $e_color in (error, $error_color),
                               (warning, $warning_color) {
      &.#{$e_type} {
        color: $e_color;
        border-color: $e_color;
        background-color: $base_color;
        text-shadow: none;
      }
    }

    image { // entry icons colors
      color: mix($fg_color, $base_color, 80%);

      &:hover { color: $fg_color; }

      &:active { color: $selected_bg_color; }
    }

//    &:drop(active) {
//      &:focus, & {
//        border-color: $drop_target_color;
//        box-shadow: inset 0 0 0 1px $drop_target_color;
//      }
//    }

//    .osd & {
//      @include entry(osd);

//      &:focus { @include entry(osd-focus); }

//      &:disabled { @include entry(osd-insensitive); }
//    }
  }

  progress {
    margin: -3px;
    background-color: transparent;
    background-image: none;
    border-radius: 0;
    border-width: 0 0 2px;
    border-color: $selected_bg_color;
    border-style: solid;
    box-shadow: none;
  }

   // linked entries
  .linked > & {
    border-right-style: none; 
    &:last-child,
    &:only-child { border-style: solid; }
  }

  .linked.vertical > & {
    border-style: solid solid none solid;
    &:last-child,
    &:only-child { border-style: solid; }
  }

  .linked:not(.vertical) > &:focus + &,
  .linked:not(.vertical) > &:focus + button,
  .linked:not(.vertical) > &:focus + combobox > box > button.combo { border-top-left-radius: 0; }

  .linked:not(.vertical) > &:drop(active) + &,
  .linked:not(.vertical) > &:drop(active) + button,
  .linked:not(.vertical) > &:drop(active) + combobox > box > button.combo { border-top-left-radius: 0; }

  // Vertically linked entries
  // FIXME: take care of "colored" entries
//  .linked.vertical > & {
//    @extend %linked_vertical;

    // brighter border between linked entries
//    &:not(:disabled) + entry:not(:disabled),
//    &:not(:disabled) + %entry:not(:disabled) {
//      border-top-color: mix($borders_color, $base_color, 30%);

//      &:backdrop { border-top-color: mix($backdrop_borders_color, $backdrop_base_color, 30%); }
//    }

    // brighter border between linked insensitive entries
//    &:disabled + %entry:disabled,
//    &:disabled + entry:disabled { border-top-color: mix($borders_color, $base_color, 30%); }

    // color back the top border of a linked focused entry following another entry.
    // :not(:only-child) is a specificity bump hack.
//    + %entry:focus:not(:only-child),
//    + entry:focus:not(:only-child) { border-top-color: entry_focus_border(); }

//    + %entry:drop(active):not(:only-child),
//    + entry:drop(active):not(:only-child) { border-top-color: $drop_target_color; }

    // this takes care of coloring the top border of the focused entry subsequent widget.
//    // :not(:only-child) is a specificity bump hack.
//    &:focus:not(:only-child) {
//      + %entry,
//      + entry,
//      + button,
//      + combobox > box > button.combo { border-top-color: entry_focus_border(); }
//    }

//    &:drop(active):not(:only-child) {
//      + %entry,
//      + entry,
//      + button,
//      + combobox > box > button.combo { border-top-color: $drop_target_color; }
//    }
//  }
}

treeview entry {
  &:focus {
    &:dir(rtl), &:dir(ltr) { // specificity bump hack
      background-color: $base_color;
      transition-property: color, background;
    }
  }

  &.flat, & {
    border-radius: 0;
    background-image: none;
    background-color: $base_color;

    &:focus { border-color: $selected_bg_color; }
  }
}


/***********
 * Buttons *
 ***********/
// stuff for .needs-attention
$_dot_color: $selected_bg_color;

@keyframes needs_attention {
  from {
    background-image: -gtk-gradient(radial,
                                    center center, 0,
                                    center center, 0.01,
                                    to($_dot_color),
                                    to(transparent));
  }

  to {
    background-image: -gtk-gradient(radial,
                                    center center, 0,
                                    center center, 0.5,
                                    to($selected_bg_color),
                                    to(transparent));
  }
}

%button,
button {
  @at-root %button_basic, & {

    min-height: 18px;
    min-width: 16px;
    padding: 5px 8px 6px;
    border: 1px solid;
    border-radius: $button_radius;
    -gtk-outline-radius: 3px;

    @include button(normal);

    &.flat {
      @include button(undecorated);
      &:hover { @include button(osd-hover); }

      &:active { @include button(active); }
    }

    &:hover { @include button(hover); }

    &:active,
    &:checked { @include button(active); }

    &.flat:disabled { @include button(undecorated); }

    &.default {
      @include button(default);

      &:hover { @include button(hover); }

      &:active { @include button(active); }
    }

    &:disabled { @include button(insensitive); }

    &.image-button {
      min-width: 24px;
      padding-left: 4px;
      padding-right: 4px;
    }

    &.text-button {
      padding-left: 16px;
      padding-right: 16px;
    }

    &.text-button.image-button {
      padding-left: 8px;
      padding-right: 8px;

      label {
        padding-left: 8px;
        padding-right: 8px;
      }
    }

//    &:drop(active) {
//      color: $drop_target_color;
//      border-color: $drop_target_color;
//      box-shadow: inset 0 0 0 1px $drop_target_color;
//    }
  }

  @at-root %button_selected, & {
    row:selected & {
      border-color: $selected_borders_color;

      &.flat:not(:active):not(:checked):not(:hover):not(disabled) {
        color: $selected_fg_color;
        border-color: transparent;

        &:backdrop { color: $backdrop_base_color; }
      }
    }
  }


  // big standalone buttons like in Documents pager
  &.osd {
    min-width: 24px;
    min-height: 32px;

    &.image-button { padding: 13px; }

    color: $osd_fg_color;
    border-radius: 5px;

    @include button(osd);

    border: none;
    box-shadow: none;

    &:hover {
      @include button(osd-hover);

      border: none;
      box-shadow: none;
    }

    &:active,
    &:checked {
      @include button(osd-active);

      border: none;
      box-shadow: none;
    }

    &:disabled {
      @include button(osd-insensitive);
      border: none;
    }
  }

  //overlay / OSD style
  @at-root %osd_button,
  .osd & {
    @include button(osd);

    &:hover { @include button(osd-hover); }

    &:active,
    &:checked { @include button(osd-active); }

    &:disabled { @include button(osd-insensitive); }

    &.flat {
      @include button(undecorated);

      box-shadow: none; //FIXME respect no edge on the button mixin
      &:hover { @include button(osd-hover); }

      &:disabled {
        @include button(osd-insensitive);
        background-image: none;
        border-color: transparent;
        box-shadow: none;
      }

      &:active,
      &:checked { @include button(osd-active); }
    }
  }

  // Suggested and Destructive Action buttons
  @each $b_type, $b_color in (suggested-action, $selected_bg_color),
                             (destructive-action, $destructive_color) {
    &.#{$b_type} {
      @include button(normal, $b_color, white);

      &.flat {
        @include button(undecorated);

        color: $b_color; //FIXME: does it work on the dark variant?
      }

      &:hover { @include button(hover, $b_color, white); }

      &:active,
      &:checked { @include button(active, $b_color, white); }

      &.flat {
        &:disabled {
          @include button(undecorated);

          color: transparentize($b_color, 0.2);
        }
      }

      &:disabled {
        @include button(insensitive);
      }

      .osd & {
        @include button(osd, $b_color);

        &:hover { @include button(osd-hover, $b_color); }

        &:active,
        &:checked { @include button(osd-active, $b_color); }

        &:disabled { @include button(osd-insensitive, $b_color); }
      }
    }
  }

  .stack-switcher > & {
    // to position the needs attention dot, padding is added to the button
    // child, a label needs just lateral padding while an icon needs vertical
    // padding added too.

    outline-offset: -3px; // needs to be set or it gets overriden by GtkRadioButton outline-offset

    > label {
      padding-left: 6px;  // label padding
      padding-right: 6px; //
    }

    > image {
      padding-left: 6px;   // image padding
      padding-right: 6px;  //
      padding-top: 3px;    //
      padding-bottom: 3px; //
    }

    &.text-button {
      // compensate text-button paddings
      padding-left: 10px;
      padding-right: 10px;
    }

    &.image-button {
      // we want image buttons to have a 1:1 aspect ratio, so compensation
      // of the padding added to the GtkImage is needed
      padding-left: 2px;
      padding-right: 2px;
    }

    &.needs-attention {
      > label,
      > image { @extend %needs_attention; }

      &:active,
      &:checked {
        > label,
        > image {
          animation: none;
          background-image: none;
        }
      }
    }
  }

  // hide separators
  &.font,
  &.file { separator { background-color: transparent; }}

  &.font { > box > box > label { font-weight: normal; }}

  // inline-toolbar buttons
  .inline-toolbar & {
    border-radius: $button_radius;
    border-width: 1px;
    @extend %linked;
  }

  //flat toolbar buttons
  toolbar &.flat {
    &, &.image-button {
      color: $fg_color;
      padding: 2px;
      min-width: 18px;
    
      background-image: none;
      background-clip: padding-box;
      background-color: transparent;
      background-size: 100% 100%;
      background-repeat: no-repeat;
    
      border-image: none;
      border: 4px solid transparent;
      border-radius: 0px;
    
      box-shadow: none;
      text-shadow: none;
      -gtk-icon-shadow: none;
    
      &:hover {
        background-image: url('Button/flat-button-hover-bg.png');
        border-image: url('Button/flat-button-hover.png');
        border-image-slice: 4 4 4 4;
      }
    
      &:active,
      &:checked {
        background-image: none;
        background-color: white; //the exception because bg is solid white
        border-image: url('Button/flat-button-checked.png');
        border-image-slice: 4 4 4 4;
      }
    
      &:checked:hover {
        background-image: url('Button/flat-button-checked-hover-bg.png');
        border-image: url('Button/flat-button-checked-hover.png');
        border-image-slice: 4 4 4 4;
      }
    
      &:active:hover {
        color: white;
        box-shadow: none;
        background-image: url('Button/flat-button-active-hover-bg.png');
        border-image: url('Button/flat-button-active-hover.png');
        border-image-slice: 4 4 4 4;
      }
	}
  }

  .primary-toolbar & { -gtk-icon-shadow: none; } // tango icons don't need shadows

  .linked > &,
  .linked > &:hover,
  .linked > &:active,
  .linked > &:checked { @extend %linked; }

  .linked.vertical > &,
  .linked.vertical > &:hover,
  .linked.vertical > &:active,
  .linked.vertical > &:checked { @extend %linked_vertical; }
  
  &.circular { // The Bloody Circul Button
    border-radius: 9999px;
    -gtk-outline-radius: 9999px;

    label { padding: 0; }

    padding: 5px 3px 6px;

    // the followind code is needed since we use a darker bottom border on buttons, which looks pretty
    // bad with a 100% border radius (see https://bugzilla.gnome.org/show_bug.cgi?id=771205 for details),
    // so on relevant states we an additional background-image with a gradient clipped on the border-box,
    // so setting a transparent border would reveal it.
    // FIXME: take care of colored circular button.
//    $_border_bg: linear-gradient(to top, $alt-borders-color 25%, $borders-color 50%);

//    &:not(.flat):not(:checked):not(:active):not(:disabled):not(:backdrop) {
//      @include button(normal);
//      background-image: $button_fill, $_border_bg;
//      border-color: transparent;
//    }

//    &:hover:not(:checked):not(:active):not(:disabled):not(:backdrop) {
//      @include button(hover);
//      background-image: $button_fill, $_border_bg;
//      border-color: transparent;
//    }

//    background-origin: padding-box, border-box;
//    background-clip: padding-box, border-box;
  }
}

%needs_attention {
  $_dot_shadow: _text_shadow_color();
  $_dot_shadow_r: 0.5;
  background-image: -gtk-gradient(radial,
                                  center center, 0,
                                  center center, 0.5,
                                  to($_dot_color),
                                  to(transparent)),
                    -gtk-gradient(radial,
                                  center center, 0,
                                  center center, $_dot_shadow_r,
                                  to($_dot_shadow),
                                  to(transparent));
  background-size: 6px 6px, 6px 6px;
  background-repeat: no-repeat;
  background-position: right 3px, right 4px;
  &:dir(rtl) {
    background-position: left 3px, left 4px;
  }
}


// all the following is for the +|- buttons on inline toolbars, that way
// should really be deprecated...
.inline-toolbar toolbutton > button.flat { // redefining the button look is
                                      // needed since those are flat...
  border-width: 1px;
  border-image: none;
  padding: 5px 8px 6px;
  
  @include button(normal);

  &:hover {
    border-width: 1px;
    border-image: none;
    @include button(hover);
  }

  &:active,
  &:active:hover,
  &:checked,
  &:checked:hover {
    border-width: 1px;
    border-image: none;
    @include button(active);
  }

  &:disabled {
    border-width: 1px;
    border-image: none;
    @include button(insensitive);
  }
}

// More inline toolbar buttons
toolbar.inline-toolbar toolbutton {
  > button.flat { @extend %linked_middle; }

  &:first-child > button.flat { @extend %linked:first-child; }

  &:last-child > button.flat { @extend %linked:last-child; }

  &:only-child > button.flat { @extend %linked:only-child; }
}

%linked_middle {
  border-radius: 0;
  -gtk-outline-radius: 0;
  border-right-style: none;
}

%linked {
  @extend %linked_middle;

  &:first-child {
    border-top-left-radius: $button_radius;
    border-bottom-left-radius: $button_radius;
    -gtk-outline-top-left-radius: 3;
    -gtk-outline-bottom-left-radius: 3;
  }

  &:last-child {
    border-top-right-radius: $button_radius;
    border-bottom-right-radius: $button_radius;
    -gtk-outline-top-right-radius: 3;
    -gtk-outline-bottom-right-radius: 3;
    border-right-style: solid;
  }

  &:only-child {
    border-radius: $button_radius;
    -gtk-outline-radius: 3px;
    border-style: solid;
  }
}

%linked_vertical_middle {
  border-style: solid solid none solid;
  border-radius: 0;
  -gtk-outline-radius: 0;
}

%linked_vertical{
  @extend %linked_vertical_middle;

  &:first-child {
    border-top-left-radius: $button_radius;
    border-top-right-radius: $button_radius;
    -gtk-outline-top-left-radius: 3px;
    -gtk-outline-top-right-radius: 3px;
  }

  &:last-child {
    border-bottom-left-radius: $button_radius;
    border-bottom-right-radius: $button_radius;
    -gtk-outline-bottom-left-radius: 3px;
    -gtk-outline-bottom-right-radius: 3px;
    border-style: solid;
  }

  &:only-child {
    border-radius: $button_radius;
    -gtk-outline-radius: 3px;
    border-style: solid;
  }
}

%undecorated_button {
  background-color: transparent;
  background-image: none;
  border-color: transparent;
  box-shadow: inset 0 1px transparentize(white, 1),
              0 1px transparentize(white, 1);
  text-shadow: none;
  -gtk-icon-shadow: none;
}

/* menu buttons */
modelbutton.flat,
.menuitem.button.flat {
  min-height: 26px;
  padding-left: 5px;
  padding-right: 5px;
  border-radius: $button_radius;
  outline-offset: -1px;

  @extend %undecorated_button;

  &:hover { background-color: mix($fg_color, $bg_color, 10%); }

  &:selected { @extend %selected_items; }
}

modelbutton.flat arrow {
  background: none;

  &:hover { background: none; }

  &.left { -gtk-icon-source: -gtk-icontheme("pan-start-symbolic"); }

  &.right { -gtk-icon-source: -gtk-icontheme("pan-end-symbolic"); }
}

button.color {
  padding: 4px;

  colorswatch:only-child {
    &, overlay {
      box-shadow: none;
      border-radius: 0;
      border: 1px solid black;
    }

    box-shadow: none;

    .osd & { box-shadow: none; }

    &:disabled,
    &:active,
    &:checked { colorswatch:only-child { box-shadow: none; }}
  }
}


/*********
 * Links *
 *********/

%link,
*:link {
  color: $link_color;

  &:visited {
    color: $link_visited_color;

    *:selected & { color: mix($selected_fg_color, $selected_bg_color, 60%); }
  }

  &:hover {
    color: lighten($link_color,10%);

    *:selected & { color: mix($selected_fg_color, $selected_bg_color, 90%); }
  }

  &:active {
    color: $link_color;

    *:selected & { color: mix($selected_fg_color, $selected_bg_color, 80%); }
  }

  @at-root %link_selected,
  &:selected,
  *:selected & { color: mix($selected_fg_color, $selected_bg_color, 80%); }
}

button:link,
button:visited {
  @extend %undecorated_button;

  @extend *:link;

  text-shadow: none;

  &:hover,
  &:active,
  &:checked {
    @extend %undecorated_button;

    text-shadow: none;
  }

  > label {
    @extend %link;

    text-decoration-line: underline;
  }
}


/*****************
 * GtkSpinButton *
 *****************/
spinbutton {
  &:not(.vertical) {
    // in this horizontal configuration, the whole spinbutton
    // behaves as the entry, so we extend the entry styling
    // and nuke the style on the internal entry
    @extend %entry;

    padding: 0;

    entry {
      min-width: 28px;
      // reset all the other props since the spinbutton node is styled here
      margin: 0;
      background: none;
      background-color: transparent;
      border: none;
      border-radius: 0;
      box-shadow: none;
    }

    button {
      min-height: 16px;
      min-width: 26px;
      margin: 0;
      padding: 0;
      color: $arrow;
      
      @include entry_button(normal, '', true);

      &.down { margin-right: 0px; }

      &:dir(rtl) { border-style: none solid none none; }

      &:hover {
        @include entry_button(hover, '', true);
      }

      &:disabled {
        color: $arrow_insensitive;
        @include entry_button(insensitive, '', true);
      }

      &:active {
        @include entry_button(active, '', true);
      }
    }
  }

  // OSD horizontal
//  .osd &:not(.vertical) {
//    button {
//      @include button(undecorated);

//      color: $osd_fg_color;
//      border-style: none none none solid;
//      border-color: transparentize($osd_borders_color, 0.3);
//      border-radius: 0;
//      box-shadow: none;

//      &:dir(rtl) { border-style: none solid none none; }

//      &:hover {
//        @include button(undecorated);

//        color: $osd_fg_color;
//        border-color: transparentize(opacify($osd_borders_color, 1), 0.5);
//        background-color: transparentize($osd_fg_color, 0.9);
//        box-shadow: none;
//      }

//      &:disabled {
//        @include button(undecorated);

//        color: $osd_insensitive_fg_color;
//        border-color: transparentize(opacify($osd_borders_color, 1), 0.5);
//        -gtk-icon-shadow: none;
//        box-shadow: none;
//      }

//      &:dir(ltr):last-child { border-radius: 0 $button_radius $button_radius 0; }

//      &:dir(rtl):first-child { border-radius: $button_radius 0 0 $button_radius; }
//    }
//  }

  // Vertical
  &.vertical {
    // in the vertical configuration, we treat the spinbutton
    // as a box, and tweak the style of the entry in the middle
    // so that it's linked

    // FIXME: this should not be set at all, but otherwise it gets the wrong
    // color
    &:disabled { color: $insensitive_fg_color; }

//    &:drop(active) {
//      border-color: transparent;
//      box-shadow: none;
//    }

    entry {
      min-height: 32px;
      min-width: 42px;
      padding: 0;
      border-radius: 0;
      border-color: $button_borders;
      &:disabled { border-color: $insensitive_borders_color; }
    }

    button {
      min-height: 32px;
      min-width: 42px;
      padding: 0;
      border-image: none;
      border-width: 1px;

      &.up { @extend %top_button; }

      &.down { @extend %bottom_button; }
    }

    %top_button {
      border-radius: $button_radius $button_radius 0 0;
      border-style: solid solid none solid;
    }

    %bottom_button {
      border-radius: 0 0 $button_radius $button_radius;
      border-style: none solid solid solid;
    }
  }

  // OSD vertical
//  .osd &.vertical button:first-child {
//    @include button(osd);

//    &:hover { @include button(osd-hover);}

//    &:active { @include button(osd-active); }

//    &:disabled { @include button(osd-insensitive); }
//  }

  // Misc
  treeview &:not(.vertical) {
    min-height: 0;
    border-style: none;
    border-radius: 0;

    entry {
      min-height: 0;
      padding: 1px 2px;
    }
  }
}


/**************
 * ComboBoxes *
 **************/
combobox {
  arrow {
    -gtk-icon-source: -gtk-icontheme('pan-down-symbolic');
    min-height: 16px;
    min-width: 16px;
  }

  &.linked {
    button:nth-child(2) {
      &:dir(ltr) { @extend %linked:last-child; }
      &:dir(rtl) { @extend %linked:first-child; }
    }
  }

//  &:drop(active) { // FIXME: untested
//    box-shadow: none;

//    button.combo { @extend %button_basic:drop(active); }
//  }
}

.linked > combobox > box > button.combo {
  // the combo is a composite widget so the way we do button linking doesn't
  // work, special case needed. See
  // https://bugzilla.gnome.org/show_bug.cgi?id=733979

  &:dir(ltr),
  &:dir(rtl) { @extend %linked_middle; } // specificity bump
}

.linked:not(.vertical) > combobox:first-child > box > button.combo { @extend %linked:first-child; }
.linked:not(.vertical) > combobox:last-child > box > button.combo { @extend %linked:last-child; }
.linked:not(.vertical) > combobox:only-child > box > button.combo { @extend %linked:only-child; }

.linked.vertical > combobox > box > button.combo { @extend %linked_vertical_middle; }
.linked.vertical > combobox:first-child > box > button.combo { @extend %linked_vertical:first-child;}
.linked.vertical > combobox:last-child > box > button.combo { @extend %linked_vertical:last-child; }
.linked.vertical > combobox:only-child > box > button.combo { @extend %linked_vertical:only-child; }


/************
 * Toolbars *
 ************/
%toolbar {
  -GtkWidget-window-dragging: true;
  padding: 4px;
  background-color: $bg_color;
}

toolbar {
  @extend %toolbar;

  @include toolbar_bg;

  // on OSD
  .osd & { background-color: transparent; }

  // stand-alone OSD toolbars
  &.osd {
    padding: 13px;
    border: none;
    border-radius: 5px;
    background-color: $osd_bg_color;

    &.left,
    &.right,
    &.top,
    &.bottom { border-radius: 0; } // positional classes for `attached` osd toolbars
  }

  &.vertical {
    border: none;
    background: none;
    background-color: $bg_color;
    box-shadow: inset 0px 1px $menubar_top_edge,
                inset 0px -1px $menubar_bottom_edge,
                inset 1px 0px $menubar_top_edge,
                inset -1px 0px $menubar_bottom_edge;
  }

  // toolbar separators
  &.horizontal separator { margin: 0 7px 1px 6px; }
  &.vertical separator { margin: 6px 1px 7px 0; }

  &:not(.inline-toolbar):not(.osd) {
    switch,
    scale,
    entry,
    spinbutton,
    button {
      margin-right: 1px;
      margin-bottom: 1px;
    }
    & .linked button {
      margin-right: 0;
    }
  }
}

//searchbar, location-bar & inline-toolbar
.inline-toolbar {
  @extend %toolbar;

  @extend %inset-bar;

  border-width: 0 1px 1px;
  padding: 3px;
  border-radius: 0px;
}

searchbar,
.location-bar,
EvAnnotationsToolbar.toolbar.inline-toolbar {
  @extend %toolbar;

  border-width: 0 0 1px;
  box-shadow: inset 0px 2px 3px -1px mix(black, $bg_color, 60%),
              inset 0 -1px $separator_color;
              
  padding: 3px;
}

%inset-bar {
  border-style: solid;
  border-color: $separator_color;
  background-color: $bg_color;
  box-shadow: inset 0px 2px 3px -1px mix(black, $bg_color, 60%);
}


/***************
 * Header bars *
 ***************/
%titlebar,
headerbar {
  padding: 0 6px;
  @include toolbar_bg;
  border-radius: 0;

  .title {
    padding-left: 12px;
    padding-right: 12px;
    font-weight: bold;
  }

  .subtitle {
    font-size: smaller;
    padding-left: 12px;
    padding-right: 12px;

    @extend .dim-label;
  }

  &.selection-mode {
    $_hc: mix($top_hilight,$selected_bg_color, 50%); // hilight color

    color: $selected_fg_color;
    border-color: $selected_borders_color;
    text-shadow: 0 -1px transparentize(black, 0.5);

    background-image: linear-gradient(to bottom,
                                      lighten($selected_bg_color,5%),
                                      $selected_bg_color);
    box-shadow: inset 0 -1px mix($selected_borders_color, $selected_bg_color, 35%), //bottom shade
                inset 0 1px $_hc;

    .subtitle:link { @extend *:link:selected;  }

    button {
      @include button(normal, $selected_bg_color, $selected_fg_color);

      &.flat { @include button(undecorated); }

      &:hover { @include button(hover, $selected_bg_color, $selected_fg_color); }

      &:active,
      &:checked { @include button(active, $selected_bg_color, $selected_fg_color); }

      &.flat { &:disabled { @include button(undecorated); } }

      &:disabled {
        @include button(insensitive, $selected_bg_color, $selected_fg_color);
      }

      &.suggested-action {
        @include button(normal);

        border-color: $selected_borders_color;

        &:hover {
          @include button(hover);

          border-color: $selected_borders_color;
        }

        &:active {
          @include button(active);

          border-color: $selected_borders_color;
        }

        &:disabled {
          @include button(insensitive);

          border-color: $selected_borders_color;
        }
      }
    }

    .selection-menu {
      border-color: transparentize($selected_bg_color, 1);
      background-color: transparentize($selected_bg_color, 1);
      background-image: none;
      box-shadow: none;
      padding-left: 10px;
      padding-right: 10px;

      GtkArrow { -GtkArrow-arrow-scaling: 1; }

      .arrow {
        -gtk-icon-source: -gtk-icontheme('pan-down-symbolic');
        color: transparentize($selected_fg_color,0.5);
        -gtk-icon-shadow: none;
      }
    }
  }

  &.default-decoration {
    min-height: 28px;
    padding: 4px;

    button.titlebutton {
      min-height: 26px;
      min-width: 26px;
      margin: 0;
      padding: 0;
    }
  }

  .solid-csd & {
    &:backdrop, & {
      &:dir(rtl), &:dir(ltr) { // specificity bump
        margin-left: -1px;
        margin-right: -1px;
        margin-top: -1px;
        border-radius: 0;
        box-shadow: none;
      }
    }
  }
}

headerbar {
  // add vertical margins to common widget on the headerbar to avoid them spanning the whole height
  entry,
  spinbutton,
  separator,
  button {
    margin-top: 6px;
    margin-bottom: 6px;
  }
  switch {
    margin-top: 9px;
    margin-bottom: 9px;
  }
}

.titlebar:not(headerbar) {
  window.csd > & {
    // in csd we assume every titlebar is a headerbar so reset anything, this is needed for split toolbars cases
    padding: 0;
    background-color: transparent;
    background-image: none;
    border-style: none;
    border-color: transparent;
    box-shadow: none;
  }

  > separator { background-color: $borders_color; }  // FIXME: use darker border?

  @extend %titlebar;
}


/************
 * Pathbars *
 ************/
.path-bar button {
  &.text-button, &.image-button, & {
    padding-left: 4px;
    padding-right: 4px;
  }

  &.text-button.image-button label {
    padding-left: 0;
    padding-right: 0;
  }

  &.text-button.image-button, & {
    label:last-child { padding-right: 8px; }
    label:first-child { padding-left: 8px; }
  }

  image {
    padding-left: 4px;
    padding-right: 4px;
  }

  &.slider-button {
    padding-left: 0;
    padding-right: 0;
  }
}

/**************
 * Tree Views *
 **************/
treeview.view {
  @at-root * {
    -GtkTreeView-horizontal-separator: 4;
    -GtkTreeView-grid-line-width: 1;
    -GtkTreeView-grid-line-pattern: '';
    -GtkTreeView-tree-line-width: 1;
    -GtkTreeView-tree-line-pattern: '';
    -GtkTreeView-expander-size: 14;
  }

  border-left-color: mix($fg_color, $base_color, 50%); // this is actually the tree lines color,
  border-top-color: $bg_color;                         // while this is the grid lines color, better then nothing

  rubberband { @extend rubberband; } // to avoid borders being overridden by the previously set props

  &:selected {
    &:focus, & {
      border-radius: 0;
      outline-offset: -1px;

      @extend %selected_items;
    }
    &:backdrop {
	  color: $fg_color;
      background-color: $bg_color;
	}
  }

  &:disabled {
    color: $insensitive_fg_color;

    &:selected {
      color: mix($selected_fg_color, $selected_bg_color, 40%);
    }
  }

  &.separator {
    min-height: 2px;
    color: $bg_color;
  }

  &:drop(active) {
    border-style: solid none;
    border-width: 1px;
    border-color: $selected_borders_color;

    &.after { border-top-style: none; }

    &.before { border-bottom-style: none; }
  }

  &.expander {
    -gtk-icon-source: -gtk-icontheme('pan-end-symbolic');

    &:dir(rtl) { -gtk-icon-source: -gtk-icontheme('pan-end-symbolic-rtl'); }

    color: $text_color;

    &:selected { color: $selected_fg_color; }
    &:selected:backdrop { color: $fg_color; }
    &:checked { -gtk-icon-source: -gtk-icontheme('pan-down-symbolic'); }
  }

  &.progressbar { // progress bar in treeviews
    color: $fg_color;
    background-image: url('Progressbar/progressbar_horizontal.png');
	background-size: 8px 100%, auto;
    
    &.vertical {
      background-image: url('Progressbar/progressbar_vertical.png');
      background-size: 100% 8px, auto;
    }
    
    &:selected {
      &:focus, & {
        color: $fg_color;
        background-image: cross-fade(85%
                                     url('Progressbar/progressbar_horizontal.png'),
                                     url('Progressbar/progressbar.png')
                                     );
      }
    }
  }

  &.trough { // progress bar trough in treeviews
    background-color: white;
    border: 1px solid mix($bg_color, black, 65%);
    padding: 2px;

    &:selected {
      background-color: transparentize($selected_fg_color, 0.7);
      border-color: mix($selected_bg_color, $bg_color, 20%);
    }
  }

  header {
    button {
      @extend %column_header_button;

      background-color: $tree_header_bg;
      border: 3px solid transparent;
      border-image: url("Treeview/tree_header.png");
      border-image-slice: 3 3 3 3;

      &:hover {
        @extend %column_header_button;

        background-color: $tree_header_hover_bg;
        border-image: url("Treeview/tree_header-hover.png");
        border-image-slice: 3 3 3 3;
      }

      &:active {
        @extend %column_header_button;
        background-color: $tree_header_active_bg;
        border-image: url("Treeview/tree_header-active.png");
        border-image-slice: 3 3 3 3;
      }
    }
  }

  button.dnd,
  header.button.dnd { // for treeview-like derive widgets
    &:active, &:selected, &:hover, & {
      padding: 0 6px;
      color: $base_color;
      background-image: none;
      background-color: $selected_bg_color;
      border-style: none;
      border-radius: 0;
      box-shadow: inset 0 0 0 1px $base_color;
      text-shadow: none;
    }
  }

  acceleditor > label { background-color: $selected_bg_color; } // see tests/testaccel to test
}

%column_header_button {
  color: $text_color;
  outline-style: none;
  padding: 0 6px;
  background-image: none;
  border-image-repeat: stretch;
  border-radius: 0;
  text-shadow: none;
  box-shadow: none;
  &:disabled { color: $insensitive_fg_color; }
}


/*********
 * Menus *
 *********/
menubar,
.menubar {
  -GtkWidget-window-dragging: true;
  padding: 1px;
  background-color: $bg_color;
  box-shadow: inset 0px 1px $menubar_top_edge,
              inset 0px -1px $menubar_bottom_edge;

  > menuitem {
    min-height: 16px;
    padding: 4px 8px;

    &:hover { //Seems like it :hover even with keyboard focus
      background-color: $selected_bg_color;
      color: $selected_fg_color;
    }

    &:disabled {
      color: $insensitive_fg_color;
      box-shadow: none;
    }
    &:backdrop {
      color: $backdrop_text_color;
	}
  }
}

menu,
.menu,
.context-menu {
  margin: 4px;
  padding: 2px;
  background-color: $base_color;
  border: 1px solid $menu_borders; // adds borders in a non composited env

  .csd & { border: none; }  // axes borders in a composited env

  menuitem {
    min-height: 16px;
    min-width: 40px;
    padding: 4px 6px;
    text-shadow: none;

    &:hover {
      color: $selected_fg_color;
      background-color: $selected_bg_color;
    }

    &:disabled { color: $insensitive_fg_color; }

    // submenu indicators
    arrow {
      min-height: 16px;
      min-width: 16px;

      &:dir(ltr) {
        -gtk-icon-source: -gtk-icontheme('pan-end-symbolic');
        margin-left: 10px;
      }

      &:dir(rtl) {
        -gtk-icon-source:-gtk-icontheme('pan-end-symbolic-rtl');
        margin-right: 10px;
      }
    }

    // avoids labels color being overridden, see
    // https://bugzilla.gnome.org/show_bug.cgi?id=767058
    label { &:dir(rtl), &:dir(ltr) { color: inherit; }}
  }

  // overflow arrows
  > arrow {
    @include button(undecorated);

    min-height: 16px;
    min-width: 16px;
    padding: 4px;
    background-color: $base_color;
    border-radius: 0;

    &.top {
      margin-top: -6px;
      border-bottom: 1px solid mix($fg_color, $base_color, 10%);
      -gtk-icon-source: -gtk-icontheme('pan-up-symbolic');
    }

    &.bottom {
      margin-bottom: -6px;
      border-top: 1px solid mix($fg_color, $base_color, 10%);
      -gtk-icon-source: -gtk-icontheme('pan-down-symbolic');
    }

    &:hover { background-color: mix($fg_color, $base_color, 10%); }

    &:disabled {
      color: transparent;
      background-color: transparent;
      border-color: transparent ;
    }
  }
}

/***************
 * Popovers   *
 ***************/

popover.background {
  padding: 2px;
  border-radius: 1px;
  background-color: mix($bg_color, $base_color, 50%);

  .csd &, & { border: 1px solid $menu_borders; }

  box-shadow: 0 1px 2px transparentize(black, 0.7);

  > list,
  > .view,
  > toolbar {
    border-style: none;
    background-color: transparent;
  }

  .csd &, & {
    &.touch-selection,
    &.magnifier {
      @extend %osd;

      border: 1px solid transparentize(white, 0.9);

      button { @extend %osd_button };
    }

    &.osd { @extend %osd; }
  }

  separator { margin: 3px; }

  list separator { margin: 0px; }
}

/*************
 * Notebooks *
 *************/
notebook {
  &.frame { border: none; }

  > header {
    padding: 0;
    border: none;
    background: none;

    tabs { margin: 0; }

    @each $header_dir, $sub_dir in (top, bottom),
                                   (bottom, top),
                                   (left, right),
                                   (right, left) {
      &.#{$header_dir} {
        padding-#{$header_dir}: 1px;

        tab {
          margin-#{$header_dir}: 2px;
          margin-#{$sub_dir}: 0;

          &:checked {
            margin-#{$header_dir}: 0;
            margin-#{$sub_dir}: -1px;

            & button.flat {
              margin-#{$header_dir}: 1px;
              margin-#{$sub_dir}: 1px;
            }
          }
        }
      }
    }

    &.top tab {
      padding-top: 0px;
      padding-bottom: 4px;

      &:checked {
        padding-top: -2px;
        padding-bottom: 7px;
      }
    }

    &.bottom tab {
      padding-top: 2px;
      padding-bottom: 2px;

      &:checked {
        padding-top: 4px;
        padding-bottom: 1px;
      }
    }

    @each $header_dir, $sub_dir in (right, left),
                                   (left, right) {
      &.#{$header_dir} tab {
        padding-#{$header_dir}: 4px;
        padding-#{$sub_dir}: 4px;

        &:checked {
          padding-#{$header_dir}: 6px;
          padding-#{$sub_dir}: 5px;
        }
      }
    }

    &.top > tabs > arrow {
      @extend %notebook_vert_arrows;

      border-top-style: none;
    }

    &.bottom > tabs > arrow {
      @extend %notebook_vert_arrows;

      border-bottom-style: none;
    }

    @at-root %notebook_vert_arrows {
      margin-left: -2px;
      margin-right: -2px;
      padding-left: 4px;
      padding-right: 4px;

      &.down { -gtk-icon-source: -gtk-icontheme('pan-start-symbolic'); }

      &.up { -gtk-icon-source: -gtk-icontheme('pan-end-symbolic'); }
    }

    &.left > tabs > arrow {
      @extend %notebook_horz_arrows;

      border-left-style: none;
    }

    &.right > tabs > arrow {
      @extend %notebook_horz_arrows;

      border-right-style: none;
    }

    @at-root %notebook_horz_arrows {
      margin-top: -2px;
      margin-bottom: -2px;
      padding-top: 4px;
      padding-bottom: 4px;

      &.down { -gtk-icon-source: -gtk-icontheme('pan-up-symbolic'); }

      &.up { -gtk-icon-source: -gtk-icontheme('pan-down-symbolic'); }
    }

    > tabs > arrow {
      @extend %button_basic;

      @extend %button_basic.flat;

      min-height: 16px;
      min-width: 16px;
      border-radius: 0;

      &:hover, &:active {
        color: $selected_fg_color;
        background-clip: content-box;
        background-image: none;
        background-color: $selected_bg_color;
        border-color: transparent;
        box-shadow: none;
      }

      &:disabled { @include button(undecorated); }
    }

    tab {
      min-height: 16px;
      min-width: 16px;

      outline: none;

      color: $text_color;
      font-weight: normal;

      // colors the button like the label, overridden otherwise
      button.flat {
        border: 1px solid transparent;
        @extend %undecorated_button;
        -gtk-icon-shadow: none;
        color: transparentize($fg_color,0.7);

        &:hover {
          color:  $fg_color;
          border: 1px solid $button_borders;
          background-image: none;
          box-shadow: none;
          -gtk-icon-shadow: none;
        }

        &:active {
          @include button(active, $edge:none);
        }

        padding: 0;
        margin: 0;
        // FIXME: generalize .small-button?
        min-width: 20px;
        min-height: 20px;

        //&:last-child {
        //  margin-left: 4px;
        //  margin-right: -4px;
        //}

        //&:first-child {
        //  margin-left: -4px;
        //  margin-right: 4px;
        //}
      }
    }

    @each $_tab, $_slice, $_border in (top,    8 5 1 5, 8px 5px 1px 5px),
                                      (bottom, 5 5 5 5, 5px 5px 5px 5px),
                                      (left,   6 1 3 5, 6px 1px 3px 5px),
                                      (right,  6 5 3 1, 6px 5px 3px 1px) {
      &.#{$_tab} tab {
        &.reorderable-page, & {
          border-style: solid;
          border-width: $_border;
          background-size: contain;
          background-clip: padding-box;
          border-image-repeat: stretch;

          border-image: url("Notebook/tab-#{$_tab}.png");
          border-image-slice: $_slice;
          background-image: url("Notebook/tab-#{$_tab}-bg.png");

          &:hover {
            border-image: url("Notebook/tab-#{$_tab}-hover.png");
            border-image-slice: $_slice;
            background-image: url("Notebook/tab-#{$_tab}-bg-hover.png");
          }

          &:checked {
            border-image: url("Notebook/tab-#{$_tab}-active.png");
            border-image-slice: $_slice;
            background-image: none;
          }
        }
      }
    }

    &.top,
    &.bottom {
      tabs {
        padding-left: 2px;
        padding-right: 2px;

        &:not(:only-child) {
          margin-left: 0;
          margin-right: 0;

          &:first-child { margin-left: 0; }
          &:last-child { margin-right: 0; }
        }

        tab {
          padding-left: 6px;
          padding-right: 6px;

          margin-left: -1px;
          margin-right: -1px;
        
          &:checked {
            padding-left: 7px;
            padding-right: 7px;

            margin-left: -2px;
            margin-right: -2px;
          }
        }
      }
    }

    &.left,
    &.right {
      tabs {
        padding-top: 0;
        padding-bottom: 0;

        &:not(:only-child) {
          margin-top: 0;
          margin-bottom: 0;

          &:first-child { margin-top: 0; }
          &:last-child { margin-bottom: 0; }
        }

        tab {
          padding-top: 5px;
          padding-bottom: 7px;

          margin-top: 0;
          margin-bottom: 2px;
        }
      }
    }


    &.top tab,
    &.left tab, { background-color: $notebook_bg_a; }

    &.bottom tab,
    &.right tab, { background-color: $notebook_bg; }

    &.top + stack {
      background-image: linear-gradient(to bottom,
                                        $notebook_bg_a,
                                        $notebook_bg_b
                                        );
      box-shadow: inset 1px 0px $notebook_bg_a,
                  inset -1px 0px $notebook_bg_a,
                  inset 0px -1px $notebook_bg_a;
    }
    &.left + stack {
      background-image: linear-gradient(to right,
                                        $notebook_bg_a,
                                        $notebook_bg_b
                                        );
      box-shadow: inset -1px 0px $notebook_bg_a,
                  inset 0px 1px $notebook_bg_a,
                  inset 0px -1px $notebook_bg_a;
    }
  }

  > stack:not(:only-child) { // the :not(:only-child) is for "hidden" notebooks
    background-color: $notebook_bg;
    border: 1px solid $notebook_borders;
    box-shadow: none;
  }
}


/**************
 * Scrollbars *
 **************/
scrollbar {
  // enable steppers
  @at-root * {
    -GtkScrollbar-has-backward-stepper: true;
    -GtkScrollbar-has-forward-stepper: true;
  }

  background-color: transparent;
  border: 0 none transparent;
  margin: 0;
  padding: 0;

  @each $w,$a in ('horizontal','horiz'),
                    ('vertical','vert') {

    &.#{$w} { background: url("Scrollbars/trough-scrollbar-#{$a}.png"); }

    // slider
    &.#{$w} slider {
      border: 5px solid transparent;
      border-image: url("Scrollbars/slider-#{$a}.png");
      border-image-slice: 5 5 5 5;
      border-image-repeat: stretch;
      background: url("Scrollbars/handle-#{$a}.png") no-repeat center center,
                  url("Scrollbars/slider-background-#{$a}.png");

      &:hover {
        border-image: url("Scrollbars/slider-#{$a}-prelight.png");
        border-image-slice: 5 5 5 5;
        border-image-repeat: stretch;
        background: url("Scrollbars/handle-#{$a}-prelight.png") no-repeat center center,
                    url("Scrollbars/slider-background-#{$a}-prelight.png");
      }

      &:hover:active {
        border-image: url("Scrollbars/slider-#{$a}-active.png");
        border-image-slice: 5 5 5 5;
        border-image-repeat: stretch;
        background: url("Scrollbars/handle-#{$a}-active.png") no-repeat center center,
                    url("Scrollbars/slider-background-#{$a}-active.png");
      }
    }
  }

  &.horizontal slider {
    min-width: 8px;
    min-height: 7px;
  }

  &.vertical slider {
    min-width: 7px;
    min-height: 8px;
  }

  &.fine-tune {
    slider {
      margin: 1px;
      min-width: 5px;
      min-height: 5px;
    }
  }

  &.overlay-indicator {
    &:not(.dragging):not(.hovering) {
      border: none;
      opacity: 0.3;
      background: none;

      -GtkScrollbar-has-backward-stepper: false;
      -GtkScrollbar-has-forward-stepper: false;

      slider {
        margin: 0;
        min-width: 4px;
        min-height: 4px;
        background-image: none;
        border: 1px solid white;
        background-color: $selected_bg_color;
        background-clip: padding-box;
      }
    }

    &.dragging,
    &.hovering { opacity: 0.8; }
  }

  // button styling
  button {
    &:active, &:hover, &:disabled, & {
      padding: 0;
      min-width: 17px;
      min-height: 17px;
      border: none;
      border-radius: 0;
      box-shadow: none;

      -gtk-icon-source: none;
    }
  }

  @each $scroll_orient,$step_end,$step_orient in ('horizontal','up','left'),
                                                 ('horizontal','down','right'),
                                                 ('vertical','up','top'),
                                                 ('vertical','down','bottom') {
	&.#{$scroll_orient} button.#{$step_end} {
	  background: url("Scrollbars/#{$step_orient}-stepper.png");

      &:hover { background: url("Scrollbars/#{$step_orient}-stepper-prelight.png"); }

      &:hover:active { background: url("Scrollbars/#{$step_orient}-stepper-active.png"); }
	}
  }
}


/**********
 * Switch *
 **********/
switch {
  font-size: smaller;
  outline-offset: -4px;

  // similar to the .scale
  border: 1px solid $button_borders;
  color: $fg_color;
  border-radius: $button_radius;
  @include button(active);

  &:disabled { @include button(insensitive); }

  slider {
    margin: -1px;
    min-width: 44px;
    min-height: 26px;
    border: 1px solid;
    border-radius: $button_radius;

    @include button(normal);
  }

  &:disabled slider { @include button(insensitive); }

  row:selected & {
    box-shadow: none;
    border-color: $selected_borders_color;

    &.slider:dir(rtl) { border-left-color: $borders_color; }
    &.slider:dir(ltr) { border-right-color: $borders_color; }

    &.slider { &:checked, & { border-color: $selected_borders_color; }}
  }
}


/*************************
 * Check and Radio items *
 *************************/
// draw regular check and radio items using our PNG assets
// all assets are rendered from assets.svg. never add pngs directly


//selection-mode
@each $s,$as in ('','-selectionmode'),
                  (':hover', '-hover-selectionmode'),
                  (':active', '-active-selectionmode'),
                  (':checked', '-checked-selectionmode'),
                  (':checked:hover', '-checked-hover-selectionmode'),
                  (':checked:active', '-checked-active-selectionmode') {
  .view.content-view.check#{$s}:not(list) {
    -gtk-icon-shadow: none;
    -gtk-icon-source: -gtk-scaled(url("Check-Radio/checkbox#{$as}.png"));
    background-color: transparent;
  }
}

checkbutton.text-button, radiobutton.text-button {
  // this is for a nice focus on check and radios text
  padding: 2px 0;
  outline-offset: 0;

  label:not(:only-child) {
    &:first-child { margin-left: 4px; }
    &:last-child { margin-right: 4px; }
  }
}

check,
radio {
  margin: 0 4px;

  &:only-child { margin: 0; }

  min-height: 16px;
  min-width: 16px;
}

@each $w,$a in ('check', 'checkbox'),
               ('radio','radio') {

  //standard checks and radios
  @each $s,$as in ('','-unchecked'),
                  (':hover', '-unchecked-hover'),
                  (':active', '-unchecked-active'),
                  (':disabled','-unchecked-insensitive'),
                  (':indeterminate', '-mixed'),
                  (':indeterminate:hover', '-mixed-hover'),
                  (':indeterminate:selected', '-mixed-active'),
                  (':indeterminate:disabled', '-mixed-insensitive'),
                  (':checked', '-checked'),
                  (':checked:disabled','-checked-insensitive'),
                  (':checked:hover', '-checked-hover'),
                  (':checked:active', '-checked-active') {

    #{$w}#{$s} { -gtk-icon-source: -gtk-scaled(url("Check-Radio/#{$a}#{$as}.png")); }

    .view #{$w}#{$s}:selected,
    row:selected #{$w}#{$s} {
      -gtk-icon-source: none;
      background-image: linear-gradient(to bottom, transparentize($selected_bg_color, 0.85), transparentize($selected_bg_color, 0.85)),
                        url("Check-Radio/#{$a}#{$as}.png"); //dirty hack

      &:backdrop { -gtk-icon-source: -gtk-scaled(url("Check-Radio/#{$a}#{$as}.png")); }
    }
  }

  //menu
  menu menuitem #{$w} {
    -gtk-icon-shadow: none;

    &:hover, &:disabled, & { -gtk-icon-source: none; }

    &:active,
    &:checked {
      -gtk-icon-source: -gtk-scaled(url("Check-Radio/menu-#{$w}-checked.png"));

      &:hover { -gtk-icon-source: -gtk-scaled(url("Check-Radio/menu-#{$w}-checked-hover.png")); }

      &:disabled { -gtk-icon-source: -gtk-scaled(url("Check-Radio/menu-#{$w}-checked-insensitive.png")); }
    }

    &:indeterminate {
      -gtk-icon-source: -gtk-scaled(url("Check-Radio/menu-#{$w}-mixed.png")); 
      
      &:hover { -gtk-icon-source: -gtk-scaled(url("Check-Radio/menu-#{$w}-mixed-hover.png")); }

      &:disabled { -gtk-icon-source: -gtk-scaled(url("Check-Radio/menu-#{$w}-mixed-insensitive.png")); }
    }
  }
}


/************
 * GtkScale *
 ************/
%scale_trough {
  border: 2px solid transparent;
  border-radius: 0;
  background-color: transparent;
  box-shadow: none;

  // ...on selected list rows
  row:selected & { &:disabled, & { border-color: $selected_borders_color; }}

  // OSD
  .osd & {
    border-color: $osd_borders_color;
    background-color: transparentize($osd_borders_color, 0.2);

    &:disabled { background-color: $osd_insensitive_bg_color; }
  }
}

scale {
  // sizing
  $_marks_lenght: 4px;
  $_marks_distance: 11px;

  min-height: 10px;
  min-width: 10px;
  padding: 12px;

  // those are inside the trough node, I need them to show their own border over the trough one, so negative margin
  fill,
  highlight { margin: -1px; }

  // click-and-hold the slider to activate
  &.fine-tune {
    fill,
    highlight,
    trough {
      outline-offset: 4px;
      -gtk-outline-radius: 1px;
    }
  }

  // the backing bit
  trough {
    @extend %scale_trough;

    outline-offset: 11px;
    -gtk-outline-radius: 2px;
  }

  // this is another differently styled part of the backing bit, the most relevant use case is for example
  // in media player to indicate how much video stream as been cached
  fill {
    @extend %scale_trough;

    &:disabled {
      border-color: transparent;
      background-color: transparent;
    }

    // OSD
    .osd & {
      background-color: transparent;

      &:disabled {
        &, &:backdrop {
          border-color: transparent;
          background-color: transparent;
        }
      }
    }
  }

  @each $dir_class, $dir_infix in ('horizontal', 'horz'),
                                  ('vertical', 'vert') {

    &.#{$dir_class} trough {
      border-image: url("Range/trough-#{$dir_infix}.png");
      border-image-repeat: stretch;
      
      $_gradient: bottom;

      @if $dir_class == 'horizontal' {
        border-width: 1px 2px;
        border-image-slice: 1 2 1 2;

      } @else {
        border-width: 2px 1px;
        border-image-slice: 2 1 2 1;

        $_gradient: right;
      }

      background-image: linear-gradient(to $_gradient,
                                        rgba(236,236,231,0.8) 1px,
                                        rgba(245,244,239,0.8)
                                        );
    }

    @each $state,$as in ('',''),
                        (':hover','-hover'),
                        (':active','-active'),
                        (':disabled','-insensitive') {

      &.#{$dir_class} slider#{$state} {
        $_url: 'Range/slider-#{$dir_infix}#{$as}';
        border-style: none;
        border-radius: 0px;
        background-color: transparent;
        background-image: -gtk-scaled(url('#{$_url}.png'));
        background-repeat: no-repeat;
        background-position: center;
        box-shadow: none;

        @if $dir_class == 'horizontal' {
          min-height: 22px;
          min-width: 11px;

          margin-top: -10px;
          margin-bottom: -10px;

        } @else {
          min-height: 11px;
          min-width: 22px;

          margin-left: -10px;
          margin-right: -10px;
        }
      }
    }
  }

  value { color: gtkalpha(currentColor, 0.4); }

  marks {
    color: gtkalpha(currentColor, 0.4);

    @each $marks_class, $marks_pos, $marks_margin in (top, top, bottom),
                                                     (bottom, bottom, top),
                                                     (top, left, right),
                                                     (bottom, right, left) {
      &.#{$marks_class} {
        margin-#{$marks_margin}: $_marks_distance;
        margin-#{$marks_pos}: -($_marks_distance + $_marks_lenght);
      }
    }
  }

  &.fine-tune marks {
    @each $marks_class, $marks_pos, $marks_margin in (top, top, bottom),
                                                     (bottom, bottom, top),
                                                     (top, left, right),
                                                     (bottom, right, left) {
      &.#{$marks_class} {
        margin-#{$marks_margin}: $_marks_distance;
        margin-#{$marks_pos}: -($_marks_distance + $_marks_lenght - 3px);
      }
    }
  }
  &.horizontal {
    indicator {
      min-height: $_marks_lenght;
      min-width: 1px;
    }

    &.fine-tune indicator { min-height: ($_marks_lenght - 3px); }
  }
  &.vertical {
    indicator {
      min-height: 1px;
      min-width: $_marks_lenght;
    }

    &.fine-tune indicator { min-width: ($_marks_lenght - 3px); }
  }
  // *WARNING* scale with marks madness following

  @each $dir_class, $dir_infix in ('horizontal', 'horz'),
                                  ('vertical', 'vert') {
    @each $marks_infix, $nth_child in ('scale-has-marks-above', ':last-child:not(:only-child)'),
                                      ('scale-has-marks-below', ':first-child:not(:only-child)') {
      @each $state, $state_infix in ('', ''),
                               (':hover', '-hover'),
                               (':active', '-active'),
                               (':disabled', '-insensitive') {
        &.#{$dir_class} {
          %#{$marks_infix}-#{$dir_infix},
          contents#{$nth_child} > trough > slider {
            &#{$state} {
              // an asymmetric slider asset is used here, so the margins are uneven, the smaller
              // margin is set on the point side.
              $_scale_asset: 'Range/slider-#{$dir_infix}-#{$marks_infix}#{$state_infix}';
              border-style: none;
              border-radius: 0;

              background-image: -gtk-scaled(url('#{$_scale_asset}.png'));

              $_scale_slider_bg_pos: bottom;
              @if $dir_class == 'horizontal' {
                min-height: 21px;
                min-width: 11px;

                @if $marks_infix == 'scale-has-marks-above' {
                  margin-top: -10px;
                  margin-bottom: -9px;

                  $_scale_slider_bg_pos: top;
                }

                @else {
                  margin-top: -9px;
                  margin-bottom: -10px;
                }
              }

              @else {
                min-height: 11px;
                min-width: 21px;

                @if $marks_infix == 'scale-has-marks-above' {
                  margin-left: -9px;
                  margin-bottom: -10px;
                }

                @else {
                  margin-left: -10px;
                  margin-bottom: -9px;
                }
              }

              background-repeat: no-repeat;
              box-shadow: none;
            }
          }
        }
      }
    }
  }

  &.color {
    min-height: 0;
    min-width: 0;

    trough {
      border: none;
      background-image: none;
      background-repeat: no-repeat;
    }

    &.horizontal {
      padding: 0 0 15px 0;

      trough {
        padding-bottom: 4px;
        background-position: 0 -3px;
        border-top-left-radius: 0;
        border-top-right-radius: 0;
      }

      slider {
        &:hover, &:disabled, & {
          @extend %scale-has-marks-above-horz;

          margin-bottom: -10px;
          margin-top: 0;
        }
      }
    }

    &.vertical {
      &:dir(ltr) {
        padding: 0 0 0 15px;

        trough {
          padding-left: 4px;
          background-position: 3px 0;
          border-bottom-right-radius: 0;
          border-top-right-radius: 0;
        }

        slider {
          &:hover, &:disabled, & {
            @extend %scale-has-marks-below-vert;

            margin-left: -10px;
            margin-right: 0;
          }
        }
      }

      &:dir(rtl) {
        padding: 0 15px 0 0;

        trough {
          padding-right: 4px;
          background-position: -3px 0;
          border-bottom-left-radius: 0;
          border-top-left-radius: 0;
        }

        slider {
          &:hover, &:disabled, & {
            @extend %scale-has-marks-above-vert;

            margin-right: -10px;
            margin-left: 0;
          }
        }
      }
    }
  }
}


/*****************
 * Progress bars *
 *****************/
progressbar {
  // sizing
  &.horizontal {
    trough,
    progress { min-height: 16px; }
  }

  &.vertical {
    trough,
    progress { min-width: 16px; }
  }

  &.horizontal progress { margin: 0; } // the progress node is positioned after the trough border
  &.vertical progress { margin: 0; }   // this moves it over it.


  // FIXME: insensitive state missing and some other state should be set probably
  font-size: smaller;
  color: transparentize($fg_color, 0.6);

  trough { @include progressbar_trough(horizontal); }

  &.vertical trough { @include progressbar_trough(vertical); }
  
  progress {
    background-image: url('Progressbar/progressbar_horizontal.png');
    background-size: 8px 100%, auto;
  }

  &.vertical progress {
    background-image: url('Progressbar/progressbar_vertical.png');
    background-size: 100% 8px, auto;
  }

  &.osd { // progressbar.osd used for epiphany page loading progress
    min-width: 3px;
    min-height: 3px;
    background-color: transparent;

    trough {
      border-style: none;
      border-radius: 0;
      background-color: transparent;
      box-shadow: none;
    }

    progress {
      border-style: none;
      border-radius: 0;
    }
  }
}


/*************
 * Level Bar *
 *************/
levelbar {
  block {
    min-width: 32px;
    min-height: 5px;
  }

  &.vertical block {
    min-width: 5px;
    min-height: 32px;
  }

  trough {
    @include progressbar_trough(horizontal);

    &.vertical { @include progressbar_trough(vertical) }
  }

  &.horizontal.discrete block { margin: 0 1px; }

  &.vertical.discrete block { margin: 1px 0; }

  block {
    border: 1px solid;
    border-radius: 1px;
      
    &.low {
      border-color: darken($warning_color,10%);
      background-color: $warning_color;
    }

    &.high,
    &:not(.empty) {
      border-color: darken($selected_bg_color,10%);
      background-color: $selected_bg_color;
    }

    &.full {
      border-color: darken($success_color,10%);
      background-color: $success_color;
    }

    &.empty {
      background-color: transparent;
      border-color: transparentize($fg_color,0.8);
    }
  }
}


/****************
 * Print dialog *
*****************/
printdialog {
  > .dialog-vbox { background-color: $bg_color; }

  paper {
    color: $fg_color;
    border: 1px solid $borders_color;
    background: white;
    padding: 0;
  }

  .dialog-action-box { margin: 12px; }
}


/**********
 * Frames *
 **********/
frame > border,
.frame {
  border: 1px solid $frame_color;
  &.flat { border-style: none; }
  padding: 0;
  &.action-bar {
    padding: 6px;
    border-width: 1px 0 0;
  }
}

scrolledwindow {
  &.frame {
    border-color: $borders_color;
    border-radius: 0px;
  }
  viewport.frame { // avoid double borders when viewport inside scrolled window
    border-style: none;
  }

  // This is used when content is touch-dragged past boundaries.
  // draws a box on top of the content, the size changes programmatically.
  overshoot {
    background: none;
    border: none;
  }

  // Overflow indication, works similarly to the overshoot, the size if fixed tho.
  undershoot {
    background: none;
    border: none;
  }

  junction { // the small square between two scrollbars
    border-color: transparent;
    // the border image is used to add the missing dot between the borders, details, details, details...
    border-image: linear-gradient(to bottom, $borders_color 1px, transparent 1px) 0 0 0 1 / 0 1px stretch;
    background-color: $scrollbar_bg_color;

    &:dir(rtl) { border-image-slice: 0 1 0 0; }
  }
}

//vbox and hbox separators
separator {
  background: $separator_color;
  min-width: 1px;
  min-height: 1px;
}


/*********
 * Lists *
 *********/
list {
  color: $text_color;
  background-color: $base_color;
  border-color: $borders_color;

  row {
    padding: 2px;
    -gtk-outline-radius: 0px;
    outline-offset: -1px;
  }
}

row { &:selected { @extend %selected_items; } }


/*********************
 * App Notifications *
 *********************/
.app-notification,
.app-notification.frame {
  @extend %osd;

  padding: 10px;
  border: 1px solid $menu_borders;
  border-top-width: 0px;
  border-radius: 0px;
  background-color: $osd_bg_color;
  background-image: linear-gradient(to bottom, transparentize(black, 0.8),
                                               transparent 2px);
  background-clip: padding-box;

  button {
    @include button(normal);

    &.flat {
      @extend %undecorated_button;

      &:hover { @include button(osd-hover); }

      &:active,
      &:checked { @include button(active); }

      &:disabled { @extend %undecorated_button; }
    }

    &:hover { @include button(hover); }

    &:active,
    &:checked { @include button(active); }

    &:disabled { @include button(osd-insensitive); }
  }

  button { @extend %osd_button; }

  border { border: none; }
}


/*************
 * Expanders *
 *************/
expander {
  arrow {
    min-width: 16px;
    min-height: 16px;
    -gtk-icon-source: -gtk-icontheme('pan-end-symbolic');

    &:dir(rtl) { -gtk-icon-source: -gtk-icontheme('pan-end-symbolic-rtl'); }

    &:hover { color: $fg_color; }

    &:checked { -gtk-icon-source: -gtk-icontheme('pan-down-symbolic'); }
  }
}


/************
 * Calendar *
 ***********/
calendar {
  color: $text_color;
  @include frame_inset;
  -gtk-outline-radius: 0px;
  outline-offset: -1px;

  &:selected {
    @extend %selected_items;
  }

  &.header {
    color: $calendar_header_fg_color;
    background-color: $calendar_header_bg_color;
    background-clip: content-box;
    border: 2px solid transparent;
    border-radius: 0;
  }

  &.button {
    @extend %undecorated_button;

    color: $calendar_header_fg_color;

    &:hover {
      @extend %undecorated_button;

      color: $selected_fg_color;
    }
  }

  &:indeterminate,
  &.highlight { color: gtkalpha(currentColor, 0.55); }
}


/***********
 * Dialogs *
 ***********/
messagedialog { // Message Dialog styling
  .titlebar {
    min-height: 20px;
    background-image: none;
    background-color: $bg_color;
    border-style: none;
    border-top-left-radius: 7px;
    border-top-right-radius: 7px;
  }

  .dialog-action-area.linked button {
     -gtk-outline-radius: 0;
     border-radius: 0;
  }

  &.csd { // rounded bottom border styling for csd version
    &.background {
      // bigger radius for better antialiasing
      border-bottom-left-radius: 9px;
      border-bottom-right-radius: 9px;
    }

    .dialog-action-area button {
      padding: 10px 14px; // labels are not vertically centered on message dialog, this is a workaround
      border-radius: 0;
      border-left-style: solid;
      border-right-style: none;
      border-bottom-style: none;


      &:first-child{
        border-left-style: none;
        border-bottom-left-radius: 7px;
        -gtk-outline-bottom-left-radius: 5px;
      }

      &:last-child {
        border-bottom-right-radius: 7px;
        -gtk-outline-bottom-right-radius: 5px;
      }
    }
  }
}

filechooser {
  border-bottom: 1px solid $separator_color;

  #pathbarbox {
    border-bottom: 1px solid $separator_color;
    background-color: $bg_color;
  }
}

filechooserbutton:drop(active) {
  box-shadow: none;
  border-color: transparent;
}


/***********
 * Sidebar *
 ***********/
.sidebar {
  border: none;
  background-color: $sidebar_bg_color;

  @at-root %sidebar_left,
  &:dir(ltr),
  &.left,
  &.left:dir(rtl) {
    border-right: 1px solid $separator_color;
    border-left-style: none;
  }

  @at-root %sidebar_right
  &:dir(rtl),
  &.right {
    border-left: 1px solid $separator_color;
    border-right-style: none;
  }

  &:selected {
    @extend %selected_items;
  }

  list { background-color: transparent; }

  paned & { &.left, &.right, &.left:dir(rtl), &:dir(rtl), &:dir(ltr), & { border-style: none; }}
}

stacksidebar {
  &.sidebar {
    &:dir(ltr),
    &.left,
    &.left:dir(rtl) { list { @extend %sidebar_left; }}

    &:dir(rtl),
    &.right { list { @extend %sidebar_right; }}
  }

  row {
    padding: 10px 4px;

    > label {
      padding-left: 6px;
      padding-right: 6px;
    }

    &.needs-attention > label {
      @extend %needs_attention;

      background-size: 6px 6px, 0 0;
    }
  }
}


/****************
 * File chooser *
 ****************/
$_placesidebar_icons_opacity: 0.7;

placessidebar {
  > viewport.frame { border-style: none; }

  row {
    // Needs overriding of the GtkListBoxRow padding
    min-height: 36px;
    padding: 0px;

    // Using margins/padding directly in the SidebarRow
    // will make the animation of the new bookmark row jump
    > revealer { padding: 0 14px; }

    &:selected { color: $selected_fg_color; }

    &:disabled { color: $insensitive_fg_color; }

    image.sidebar-icon {
      opacity: $_placesidebar_icons_opacity; // dim the device icons

      &:dir(ltr) { padding-right: 8px; }
      &:dir(rtl) { padding-left: 8px; }
    }

    label.sidebar-label {
      &:dir(ltr) { padding-right: 2px; }
      &:dir(rtl) { padding-left: 2px; }
    }

    @at-root button.sidebar-button {
      @extend %button_basic.flat;

      @extend %button_selected.flat;

      min-height: 26px;
      min-width: 26px;
      margin-top: 3px;
      margin-bottom: 3px;
      padding: 0;
      border-radius: 100%;
      -gtk-outline-radius: 100%;

      &:not(:hover):not(:active),
      &:backdrop { > image { opacity: $_placesidebar_icons_opacity; }}
    }

    // in the sidebar case it makes no sense to click the selected row
    &:selected:active { box-shadow: none; }

//    &.sidebar-placeholder-row {
//      padding: 0 8px;
//      min-height: 2px;
//      background-image: image($drop_target_color);
//      background-clip: content-box;
//    }

    &.sidebar-new-bookmark-row { color: $selected_bg_color; }

//    &:drop(active):not(:disabled) {
//      color: $drop_target_color;
//      box-shadow: inset 0 1px $drop_target_color,
//                  inset 0 -1px $drop_target_color;

//      &:selected {
//        color: $selected_fg_color;
//        background-color: $drop_target_color;
//      }
//    }
  }
}

placesview {
  row.activatable:hover { background-color: transparent; }

  // this selects the "connect to server" label
  > actionbar > revealer > box > label {
    padding-left: 8px;
    padding-right: 8px;
  }

  // this selects the "connect to server" label
  > actionbar > revealer > box > label {
    padding-left: 8px;
    padding-right: 8px;
  }
}



/*********
 * Paned *
 *********/
paned {
  > separator {
    min-width: 1px;
    min-height: 1px;
    -gtk-icon-source: none; // defeats the ugly default handle decoration
    border-style: none; // just to be sure
    background-color: transparent;
    // workaround, using background istead of a border since the border will get rendered twice (?)
    background-image: image($separator_color);
    background-size: 1px 1px;

    &:selected { background-image: image($selected_bg_color); } // FIXME is this needed?

    &.wide {
      min-width: 5px;
      min-height: 5px;
      background-color: $bg_color;
      background-image: image($separator_color), image($separator_color);
      background-size: 1px 1px, 1px 1px;
    }
  }

  &.horizontal > separator {
    background-repeat: repeat-y;

    &:dir(ltr) {
      margin: 0 -8px 0 0;
      padding: 0 8px 0 0;
      background-position: left;
    }
    &:dir(rtl) {
      margin: 0 0 0 -8px;
      padding: 0 0 0 8px;
      background-position: right;
    }

    &.wide {
      margin: 0;
      padding: 0;
      background-repeat: repeat-y, repeat-y;
      background-position: left, right;
    }
  }

  &.vertical > separator {
    margin: 0 0 -8px 0;
    padding: 0 0 8px 0;
    background-repeat: repeat-x;
    background-position: top;

    &.wide {
      margin: 0;
      padding: 0;
      background-repeat: repeat-x, repeat-x;
      background-position: bottom, top;
    }
  }
}


/**************
 * GtkInfoBar *
 **************/
infobar {
  border-style: none;

  &.info,
  &.question,
  &.warning,
  &.error {
    label, & { color: $selected_fg_color; }
    background-color: $selected_bg_color;
    border-color: darken($selected_bg_color, 10%);

    text-shadow: none;

    button {
      // FIXME: extend selection mode buttons
      @include button(normal, $selected_bg_color, $selected_fg_color, none);

      &:hover { @include button(hover, $selected_bg_color, $selected_fg_color, none); }

      &:active,
      &:checked { @include button(active, $selected_bg_color, $selected_fg_color, none); }

      &:disabled {
        @include button(insensitive,$selected_bg_color, $insensitive_fg_color, none);

        & label { color: $insensitive_fg_color; }
      }
    }

    selection { background-color: darken($selected_bg_color, 10%); }

    *:link { @extend %link_selected; }
  }
}


/************
 * Tooltips *
 ************/
tooltip {
  &.background {
    // background-color needs to be set this way otherwise it gets drawn twice
    // see https://bugzilla.gnome.org/show_bug.cgi?id=736155 for details.
    background-color: $tooltip_bg_color;
    background-clip: padding-box;
    border: 1px solid $tooltip_borders_color; // this suble border is meant to
                                              // not make the tooltip melt with
                                              // very dark backgrounds
  }

  padding: 4px; /* not working */
  border-radius: 0px;
  box-shadow: none; // otherwise it gets inherited by windowframe.csd
  text-shadow: none;

  // FIXME: we need a border or tooltips vanish on black background.
  decoration { background-color: transparent; }

  * { // Yeah this is ugly
    padding: 4px;
    background-color: transparent;
    color: $tooltip_fg_color;
  }
}


/*****************
 * Color Chooser *
 *****************/
colorswatch {
  // This widget is made of two boxes one on top of the other, the lower box is colorswatch {} the other one
  // is colorswatch overlay {}, colorswatch has the programmatically set background, so most of the style is
  // applied to the overlay box.

  &:drop(active), & { border-style: none; } // FIXME: implement a proper drop(active) state

  // base color corners rounding
  // to avoid the artifacts caused by rounded corner anti-aliasing the base color
  // sports a bigger radius.
  // nth-child is needed by the custom color strip.

  -gtk-outline-radius: 0px;
  outline-offset: -5px;
    
  border: none;
  
  &:selected { box-shadow: 0 0 0 1px black; };

  &.dark overlay { color: $selected_fg_color; }

  &.light overlay { color: $text_color; }

//  &:drop(active) {
//    box-shadow: none;

//    &.light overlay {
//      border-color: $drop_target_color;
//      box-shadow: inset 0 0 0 2px darken($drop_target_color, 7%),
//                  inset 0 0 0 1px $drop_target_color;
//    }

//    &.dark overlay {
//      border-color: $drop_target_color;
//      box-shadow: inset 0 0 0 2px transparentize(black, 0.7),
//                  inset 0 0 0 1px $drop_target_color;
//    }
//  }

  overlay {
    border: none;
    box-shadow: $inset_shadow;
    
    &:selected { background-color: transparent; }

    row & {
      box-shadow: none;
      border: 1px solid black;
    }
  }

  &#add-color-button {
    border-radius: 0;

    overlay {
      border: 1px solid $button_borders;

      @include button(normal);

      &:hover { @include button(hover); }
    }
  }

  &:disabled {
    opacity: 0.5;

    overlay {
      border-color: transparentize(black, 0.4);
      box-shadow: none;
    }
  }

  row:selected & { box-shadow: none; }

  &#editor-color-sample {
    border-radius: 0;

    overlay { border-radius: 0; }
  }
}

// colorscale popup
colorchooser .popover.osd { border-radius: 0px; }

/********
 * Misc *
 ********/
//content view (grid/list)
.content-view {
  background-color: darken($bg_color,7%);
  rubberband { @extend rubberband; }
}

.scale-popup {
  button { // +/- buttons on GtkVolumeButton popup
    &:hover {
      @extend %undecorated_button;
      background-color: transparentize($fg_color,0.9);
      border-radius: 5px;
    }
  }
}


/**********************
 * Window Decorations *
 *********************/
decoration {
  border-radius: 0;
  // lamefun trick to get rounded borders regardless of CSD use
  border-width: 0px;

  // this needs to be transparent
  // see bug #722563
  $_wm_border: transparentize(black, 0.77);
  $_wm_border_backdrop: transparentize(black, 0.82);

  box-shadow: 0 3px 9px 1px transparentize(black, 0.5),
              0 0 0 1px $_wm_border; //doing borders with box-shadow

  // FIXME rationalize shadows

  // this is used for the resize cursor area
  margin: 10px;

  .maximized &,
  .fullscreen &,
  .tiled & { border-radius: 0; }

  .popup & { box-shadow: none; }

  // server-side decorations as used by mutter
  ssd & { box-shadow: 0 0 0 1px $_wm_border; } //just doing borders, wm draws actual shadows

  .csd.popup & {
    border-radius: 0;
    box-shadow: 3px 3px 2px transparentize(black, 0.8),
                0 0 0 1px $menu_borders;
  }

  tooltip.csd & {
    border-radius: 8px;
    box-shadow: none;
  }

  messagedialog.csd & {
    border-radius: 7px;
    box-shadow: 0 1px 2px transparentize(black, 0.8),
                  0 0 0 1px transparentize($_wm_border,0.1);
  }

  .solid-csd & {
    margin: 0;
    padding: 4px;
    background-color: $borders_color;
    border: solid 1px $borders_color;
    border-radius: 0;
    box-shadow: none;
  }
}

// Window Close button
button.titlebutton {
  @extend %button_basic;

  @extend %button_basic.flat;

  &:hover { @include button(osd-hover); }

  &:active,
  &:checked { @include button(active); }

//  .selection-mode & {
//    @extend %button.flat.suggested-action;

//    @extend %nobg_selected_items;
//  }
}

//headerbar.selection-mode button.titlebutton,
//.titlebar.selection-mode button.titlebutton {
//  @include _button_text_shadow(white, $selected_bg_color);

//  &:backdrop { -gtk-icon-shadow: none; }
//}


// catch all extend :)

%selected_items {
  background-color: $selected_bg_color;

  @at-root %nobg_selected_items, & {
    color: $selected_fg_color;
    outline-color: $selected_outline_color;

    &:backdrop {
      color: $fg_color;
      background-color: $bg_color;
    }
  }
}

.monospace { font-family: Monospace; }


/**********************
 * Touch Copy & Paste *
 *********************/
//touch selection handlebars for the Popover.osd above
//kidding...XP and touchscreens don't mix

.context-menu { font: initial; } // Decouple the font of context menus from their entry/textview

// shortcut window keys
.keycap {
  min-width: 20px;
  min-height: 25px;
  margin-top: 2px;
  padding-bottom: 3px;
  padding-left: 6px;
  padding-right: 6px;

  color: $fg_color;
  background-color: $base_color;
  border: 1px solid;
  border-color: mix($borders_color, $bg_color, 50%);
  border-radius: 5px;
  box-shadow: inset 0 -3px mix($base_color, $bg_color, 20%);
  font-size: smaller;
}

//*:drop(active):focus,
//*:drop(active) { // FIXME needs to be done widget by widget, this wildcard should really die
//  border-color: $drop_target_color;
//  box-shadow: inset 0 0 0 1px $drop_target_color;
//  caret-color: $drop_target_color;
//}

stackswitcher button.text-button { min-width: 100px; } // FIXME aggregate with buttons

stackswitcher button.circular,
stackswitcher button.text-button.circular { // FIXME aggregate with buttons
  min-width: 32px;
  min-height: 32px;
  padding: 0;
}
