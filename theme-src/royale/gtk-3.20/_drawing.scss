// Drawing mixins

// generic drawing of more complex things

@function _widget_edge($c:$borders_edge) {
// outer highlight "used" on most widgets
  @return 0px 1px $c;
}

@mixin _shadows($shadow1, $shadow2:none, $shadow3:none, $shadow4:none) {
//
// Helper function to stack up to 4 box-shadows;
//
  @if $shadow4!=none { box-shadow: $shadow1, $shadow2, $shadow3, $shadow4; }
  @else if $shadow3!=none { box-shadow: $shadow1, $shadow2, $shadow3; }
  @else if $shadow2!=none { box-shadow: $shadow1, $shadow2; }
  @else { box-shadow: $shadow1; }
}

// buttons

$button_radius: 2px;

@function _border_color ($c) { @return darken($c,25%); } // colored buttons want
                                                         // the border form the
                                                         // base color

@function _text_shadow_color ($tc:$fg_color, $bg:$bg_color) {
//
// calculate the color of text shadows
//
// $tc is the text color
// $bg is the background color
//
  $_lbg: lightness($bg)/100%;
  @if lightness($tc)<50% { @return transparentize(white,1-$_lbg/($_lbg*1.3)); }
  @else { @return transparentize(black,$_lbg*0.8); }
}

@mixin button($t, $c:$button_color, $tc:$fg_color, $edge: $borders_edge) {
//
// Button drawing function
//
// $t:    button type,
// $c:    base button color for colored* types
// $tc:   optional text color for colored* types
// $edge: set to none to not draw the bottom edge or specify a color to not
//        use the default one
//
// possible $t values:
// normal, hover, active, insensitive, insensitive-active,
// backdrop, backdrop-active, backdrop-insensitive, backdrop-insensitive-active,
// osd, osd-hover, osd-active, osd-insensitive, osd-backdrop, undecorated
//

  //ugly hack to "switch" bottom edge on/off to integrate with adwaita code
  $_bottom_edge_transparency: if($edge==none, 1.0, 0.4);
  $_button_edge: 0px 1px transparentize(white, $_bottom_edge_transparency),
                 1px 0px transparentize(white, 0.80),
				 0px -1px transparentize(black, 0.96),
				-1px 0px transparentize(black, 0.97);

  $_button_inner_edge: transparentize(darken($c, 17%), 0.25),
                       transparentize(darken($c, 17%), 0.25) 1px,
                       transparentize(lighten($c, 11.5%), 0.55) 1px,
                       transparentize(lighten($c, 11.5%), 0.55) 2px,
                       transparent 2px;
                       		
  $_button_bg: linear-gradient(to top,
                               darken($c, 18%),
                               darken($c, 18%) 1px,
                               transparent 1px
                               ),
               linear-gradient(to right,
                               $_button_inner_edge
                               ),
               linear-gradient(to left,
                               $_button_inner_edge
                               ),
               linear-gradient(to bottom,
                               lighten($c, 1.25%) 1px,
                               lighten($c, 11.5%) 1px,
                               lighten($c, 11.5%) 2px,
                               lighten($c, 9.75%) 2px,
                               lighten($c, 9.75%) 3px,
                               transparent 3px
                               ),
               linear-gradient(to top,
                               darken($c, 17.5%) 1px,
                               $c 40%,
                               lighten($c, 5.25%) 45%,
                               lighten($c, 7%) 50%,
                               lighten($c, 9.3%) 60%,
                               lighten($c, 12.5%)
                               );
               
  $_button_bg_active: linear-gradient(to bottom,
                                      lighten($c, 1.25%) 1px,
                                      darken($c, 27%) 1px,
                                      darken($c, 27%) 2px,
                                      transparent 2px
                                      ),
                      linear-gradient(to right,
                                      darken($c, 27%) 1px,
                                      transparent 1px
                                      ),
                      linear-gradient(to left,
                                      darken($c, 27%) 1px,
                                      transparent 1px
                                      ),
                      linear-gradient(to top,
                                      lighten($c, 11.5%) 1px,
                                      lighten($c, 9.75%) 1px,
                                      lighten($c, 9.75%) 2px,
                                      lighten($c, 12.5%) 2px,
                                      lighten($c, 5.25%) 50%,
                                      darken($c, 17.5%) 95%
                                      );
                               
  $_blank_edge: if($edge == none, none, _widget_edge(transparentize($edge,1)));

  -gtk-icon-shadow: none;

  @if $t==normal {
  //
  // normal button
  //
    color: $tc;
    outline-color: transparentize($tc, 0.5);
    border-color: $button_borders;
    background-image: $_button_bg;
    box-shadow: $_button_edge;
  }

  @else if $t==default {
  //
  // default button
  //
    color: $tc;
    outline-color: transparentize($tc, 0.5);
    border-color: $button_borders;
    background-image: $_button_bg;
    box-shadow: $_button_edge,
                inset 0px 0px 1px 2px transparentize(#0058CC, 0.55),
                inset 0px 1px #8bc0ea,
                inset 0px -1px #3f6db1;
  }

  @else if $t==hover {
  //
  // hovered button
  //
    color: $tc;
    outline-color: transparentize($tc, 0.5);
    border-color: $button_borders;
    background-image: $_button_bg;
    box-shadow: $_button_edge,
                inset 0px 0px 1px 2px transparentize(#FA9600, 0.5),
                inset 0px 1px #f5e8a1,
                inset 0px -1px #da7926;
  }

  @else if $t==active {
  //
  // pushed button
  //
    color: $tc;
    outline-color: transparentize($tc, 0.5);
    border-color: $button_borders;
    background-image: $_button_bg_active;
    box-shadow: $_button_edge;
  }
  @else if $t==insensitive {
  //
  // insensitive button
  //
    color: $insensitive_fg_color;
    border-color: $insensitive_borders_color;
    background-image: none;
    background-color: $base_color;
    text-shadow: none;
    -gtk-icon-shadow: none;
    box-shadow: none;
  }

  @else if $t==osd {
  //
  // normal osd button
  //
    $_bg: if($c!=$bg_color, transparentize($c, 0.5),
                            $osd_bg_color);

    color: $osd_fg_color;
    border-color: $button_borders;
    background-color: $_bg;
    background-image: none;
    background-clip: padding-box;
    box-shadow: inset 0 1px transparentize(white, 0.9);
    outline-color: transparentize($osd_fg_color, 0.5);
  }
  @else if $t==osd-hover {
  //
  // active osd button
  //
    $_bg: if($c!=$bg_color, transparentize(lighten($c, 8%), 0.3), lighten($osd_bg_color, 12%));

    //color: white;
    border-color: $button_borders;
    background-color: $_bg;
    background-image: none;
    background-clip: padding-box;
    box-shadow: inset 0 1px transparentize(white, 0.9);
    outline-color: transparentize($osd_fg_color, 0.5);
    -gtk-icon-shadow: none;
  }
  @else if $t==osd-active {
  //
  // active osd button
  //
    $_bg: if($c!=$bg_color, $c, $osd_borders_color);

    //color: white;
    border-color: $button_borders;
    background-color: $_bg;
    background-image: none;
    background-clip: padding-box;
    box-shadow: none;
    text-shadow: none;
    -gtk-icon-shadow: none;
    outline-color: transparentize($osd_fg_color, 0.5);
  }
  @else if $t==osd-insensitive {
  //
  // insensitive osd button
  //
    color: $osd_insensitive_fg_color;
    border-color: $insensitive_borders_color;
    background-color: $osd_insensitive_bg_color;
    background-image: none;
    background-clip: padding-box;
    box-shadow: none;
    text-shadow: none;
    -gtk-icon-shadow: none;
  }
  @else if $t==osd-backdrop {
  //
  // backdrop osd button
  //
    $_bg: if($c!=$bg_color, transparentize($c, 0.5),
                            $osd_bg_color);

    color: $osd_fg_color;
    border-color: $osd_borders_color;
    background-color: $_bg;
    background-image: none;
    background-clip: padding-box;
    box-shadow: none;
    text-shadow: none;
    -gtk-icon-shadow: none;
  }
  @else if $t==undecorated {
  //
  // reset
  //
    border-color: transparent;
    background-color: transparent;
    background-image: none;

    @include _shadows(inset 0 1px transparentize(white, 1),
                      $_blank_edge);

    text-shadow: none;
    -gtk-icon-shadow: none;
  }
}

@mixin toolbar_bg {
  border-style: solid;
  border-width: 1px 0px 1px 0px;
  border-top-color: white;
  border-bottom-color: $separator_color;
  background: $bg_color;
}
